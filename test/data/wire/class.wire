/*
 * class.wire
 *
 *  Created on: 22 апр. 2016 г.
 *      Author: sergey.fedorov
 */

#ifndef DATA_WIRE_CLASS_WIRE_
#define DATA_WIRE_CLASS_WIRE_

#include <wire/sugar.wire>
#include <wire/core/identity.wire>

#include "interface.wire"

namespace test {

string const immutable = "Always here";
bool const lie = false;

exception oops;

enum class color {
    red = 0,
    green,
    blue
};

exception oops {
    string message;
};

interface shiny_one;

interface shiny_one {
    using magic = array< byte, 4 >;

    magic
    get_some_magic(int32 key) const throw(oops);

    void
    set_some_magic(magic m, shiny_one* s);
};

using alias = shiny_one;
using alias = shiny_one;

interface backdoor {
    using key = uuid;

    void
    oops();
};

struct stuff {
    sequence< byte > data;
};

class mixin {
    color c;
    stuff s;
};

class extended_mixin : mixin {
    shiny_one*    magic;
};

class base_class : shiny_one {
    magic the_spell;
};

class derived : base_class, backdoor {
    key the_key;
};

}  /* namespace test */

#endif /* DATA_WIRE_CLASS_WIRE_ */
